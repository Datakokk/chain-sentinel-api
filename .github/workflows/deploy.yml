name: Deploy FastAPI to Cloud Run

on:
  push:
    branches:
      - main # you can add 'staging', 'development' if you want

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment:
      name: ${{ github.ref_name == 'main' && 'production' || 'development' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}"

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Build and Push Docker image
        run: |
          IMAGE_URI=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REPOSITORY }}/fastapi-api:${{ github.sha }}
          echo "Building Docker Image: $IMAGE_URI"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Deploy to Cloud Run
        run: |
          IMAGE_URI=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REPOSITORY }}/fastapi-api:${{ github.sha }}
          SERVICE_NAME=fastapi-api-${{ github.ref_name }}
          echo "Deploying $SERVICE_NAME with image $IMAGE_URI"
          gcloud run deploy $SERVICE_NAME \
            --image $IMAGE_URI \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars ENVIRONMENT=${{ vars.ENVIRONMENT }},FIREBASE_CREDENTIALS_JSON=${{ secrets.FIREBASE_CREDENTIALS_JSON }},ETHERSCAN_API_KEY=${{ secrets.ETHERSCAN_API_KEY }}
